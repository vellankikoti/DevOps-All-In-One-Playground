name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: devops
          POSTGRES_PASSWORD: password
          POSTGRES_DB: devops_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U devops"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js for frontend and backend
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install and Test Frontend
      working-directory: frontend
      run: |
        npm install
        npm run build
        npm test

    - name: Install and Test Backend
      working-directory: backend
      env:
        DATABASE_URL: "postgresql://devops:password@localhost:5432/devops_db"
      run: |
        npm install
        npm test

    - name: Build and Push Docker Images
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker build -t $DOCKER_USERNAME/devops-frontend:latest ./frontend
        docker build -t $DOCKER_USERNAME/devops-backend:latest ./backend
        docker push $DOCKER_USERNAME/devops-frontend:latest
        docker push $DOCKER_USERNAME/devops-backend:latest

    - name: Deploy to Kubernetes
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}
      run: |
        kubectl apply -f kubernetes/database-deployment.yaml
        kubectl apply -f kubernetes/backend-deployment.yaml
        kubectl apply -f kubernetes/frontend-deployment.yaml

